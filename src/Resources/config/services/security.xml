<?xml version="1.0" encoding="UTF-8" ?>
<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services
        http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>

        <service id="sonrac_oauth.security.secure_key_factory" class="Sonrac\OAuth2\Factory\SecureKeyFactory"
                 public="false">
            <argument type="service" id="service_container"/>
        </service>

        <service id="sonrac_oauth.security.grant_type_factory" class="Sonrac\OAuth2\Factory\GrantTypeFactory"
                 public="false">
            <argument type="service" id="service_container"/>
        </service>

        <service id="sonrac_oauth.security.token_factory.abstract"
                 class="Sonrac\OAuth2\Security\Factory\OAuthTokenFactory"
                 public="false"
                 abstract="true">
        </service>

        <service id="sonrac_oauth.security.authorization_validator.bearer_token_configurator"
                 class="Sonrac\OAuth2\Configurator\BearerTokenValidatorConfigurator" public="false">
            <argument type="service" id="sonrac_oauth.security.secure_key_factory"/>
        </service>

        <service id="sonrac_oauth.security.authorization_validator.bearer_token"
                 class="League\OAuth2\Server\AuthorizationValidators\BearerTokenValidator">
            <argument key="$accessTokenRepository"/>
            <configurator service="sonrac_oauth.security.authorization_validator.bearer_token_configurator"
                          method="configure"/>
        </service>

        <service id="sonrac_oauth.security.authentication_provider.abstract"
                 class="Sonrac\OAuth2\Security\OAuthAuthenticationProvider"
                 public="false"
                 abstract="true">
        </service>

        <service id="sonrac_oauth.security.authentication_listener.abstract"
                 class="Sonrac\OAuth2\Security\OAuthAuthenticationListener" public="false" abstract="true">
            <argument key="$authorizationValidator" type="service"
                      id="sonrac_oauth.security.authorization_validator.bearer_token"/>
            <argument key="$authenticationManager" type="service" id="security.authentication.manager"/>
            <argument key="$tokenStorage" type="service" id="security.token_storage"/>
            <argument key="$httpUtils" type="service" id="security.http_utils"/>
            <argument key="$diactorosFactory" type="service" id="sensio_framework_extra.psr7.http_message_factory"/>
            <argument key="$httpFoundationFactory" type="service"
                      id="sensio_framework_extra.psr7.http_foundation_factory"/>
        </service>

        <service id="sonrac_oauth.security.authorization_server_configurator.abstract"
                 class="Sonrac\OAuth2\Configurator\AuthorizationServerConfigurator" public="false" abstract="true">
            <argument type="service" id="sonrac_oauth.security.grant_type_factory"/>
        </service>

        <service id="sonrac_oauth.security.authorization_server.abstract"
                 class="League\OAuth2\Server\AuthorizationServer" public="false" abstract="true">
            <argument key="$privateKey">%sonrac_oauth.keys.pair.path%/%sonrac_oauth.keys.pair.private_key_name%</argument>
            <argument key="$encryptionKey">%sonrac_oauth.keys.encryption%%</argument>
        </service>

    </services>
</container>
